<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="group5.sebm.notifiation.dao.UnsubscribeMapper">

    <resultMap id="BaseResultMap" type="group5.sebm.notifiation.entity.UnsubscribePo">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="userId" column="userId" jdbcType="BIGINT"/>
        <result property="notificationEvent" column="notificationEvent" jdbcType="INTEGER"/>
        <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, userId, notificationEvent, isDelete, createTime, updateTime
    </sql>

    <!-- 根据 userId + event 查询（用于判断是否退订） -->
    <select id="selectByUserAndEvent" resultMap="BaseResultMap" parameterType="map">
        SELECT <include refid="Base_Column_List"/>
        FROM notificationUnsubscribe
        WHERE userId = #{userId}
          AND notificationEvent = #{notificationEvent}
          AND isDelete = 0
        LIMIT 1
    </select>

    <!-- 查询用户所有退订事件 -->
    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="long">
        SELECT <include refid="Base_Column_List"/>
        FROM notificationUnsubscribe
        WHERE userId = #{userId}
          AND isDelete = 0
        ORDER BY createTime DESC
    </select>

    <!-- 插入退订记录 -->
    <insert id="insert" parameterType="group5.sebm.notifiation.entity.UnsubscribePo" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO notificationUnsubscribe (userId, notificationEvent, isDelete, createTime, updateTime)
        VALUES (#{userId}, #{notificationEvent}, #{isDelete}, #{createTime}, #{updateTime})
    </insert>

    <!-- 软删除（按 id） -->
    <update id="softDeleteById" parameterType="long">
        UPDATE notificationUnsubscribe
        SET isDelete = 1, updateTime = NOW()
        WHERE id = #{id}
          AND isDelete = 0
    </update>

    <!-- 软删除（按 userId + event） -->
    <update id="softDeleteByUserAndEvent" parameterType="map">
        UPDATE notificationUnsubscribe
        SET isDelete = 1, updateTime = NOW()
        WHERE userId = #{userId}
          AND notificationEvent = #{notificationEvent}
          AND isDelete = 0
    </update>

</mapper>

